{"version":3,"sources":["store/actions/actions.ts","components/Task.tsx","components/TasksList.tsx","components/NewTask.tsx","App.tsx","store/reducers/tasksReducer.tsx","store/store.ts","index.tsx"],"names":["addTask","task","type","payload","Task","description","title","status","dispatch","useDispatch","className","toString","name","id","checked","onChange","e","toggleTask","value","onClick","deleteTask","console","log","target","handleDelete","TasksList","tasks","useSelector","state","length","map","key","defaultTask","NewTask","useState","setTask","onFormChange","prop","onAddTask","a","preventDefault","action","onSubmit","htmlFor","App","initialState","store","createStore","newState","el","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.513f9c55.chunk.js","sourcesContent":["export const addTask = (task: Task): Actions => {\r\n  return { type: \"ADD_TASK\", payload: task };\r\n};\r\n\r\nexport const toggleTask = (task: Task): Actions => {\r\n  return { type: \"TOGGLE_TASK\", payload: task };\r\n};\r\n\r\nexport const deleteTask = (task:Task):Actions=>{\r\n  return {type: 'DELETE_TASK', payload: task}\r\n}\r\n\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTask, toggleTask } from \"../store/actions/actions\";\r\n\r\nexport const Task: React.FC<{ task: Task }> = ({ task }) => {\r\n  const { description, title, status } = task;\r\n  const dispatch = useDispatch();\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    dispatch(toggleTask(task));\r\n  };\r\n  const handleDelete = (e: React.FormEvent<HTMLInputElement>) => {\r\n    dispatch(deleteTask(task));\r\n    console.log(e.target);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className={status ? \"finished taskLbl\" : \"taskLbl\"}>\r\n        <span className=\"taskTitle\">{title?.toString()}</span> <br />\r\n        <span className=\"taskDescription\"> {description?.toString()}</span>\r\n      </label>\r\n      <div className=\"inputContainer\">\r\n        <input\r\n          className=\"inputCheckbox\"\r\n          type=\"checkbox\"\r\n          name=\"\"\r\n          id=\"\"\r\n          checked={status}\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        <input\r\n          className=\"inputButton btn\"\r\n          type=\"button\"\r\n          value=\"delete\"\r\n          onClick={(e) => handleDelete(e)}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n// );\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Task } from \"./Task\";\r\n\r\nexport const TasksList: React.FC = () => {\r\n  const tasks = useSelector<TasksState, TasksState[\"tasks\"]>((state) => {\r\n    return state.tasks;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"tasksList\">\r\n        {tasks.length &&\r\n          tasks.map((task, id) => {\r\n            return (\r\n              <li key={id} className=\"task\">\r\n                {<Task task={task} />}\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTask } from \"../store/actions/actions\";\r\n\r\nconst defaultTask: Task = {\r\n  title: \"\",\r\n  description: \"\",\r\n  status: false,\r\n};\r\n\r\nexport const NewTask = () => {\r\n  const [task, setTask] = useState(defaultTask);\r\n\r\n  //<P extends keyof Task> znaczy to ze P przyjmuje klucze Task\r\n  const onFormChange = <P extends keyof Task>(prop: P, value: Task[P]) => {\r\n    setTask({ ...task, [prop]: value });\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddTask = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (task.title && task.description) {\r\n      dispatch(addTask(task));\r\n      setTask({ ...defaultTask });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form\" action=\"\" onSubmit={(e) => onAddTask(e)}>\r\n        <div className=\"lineInForm\">\r\n          <label\r\n            htmlFor=\"addDescription\"\r\n            className=\"formLblDescription formLbl\"\r\n          >\r\n            Description:{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"formInput\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"addTask\"\r\n            value={task.description}\r\n            onChange={(e) => onFormChange(\"description\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"lineInForm\">\r\n          <label htmlFor=\"addTitle\" className=\"formLblTitle formLbl\">\r\n            Title:{\" \"}\r\n          </label>\r\n          <input\r\n            value={task.title}\r\n            className=\"formInput\"\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"addTitle\"\r\n            onChange={(e) => onFormChange(\"title\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"lineInForm\">\r\n          <input type=\"submit\" value=\"New Task\" className=\"btnSubmit btn\" />\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TasksList } from \"./components/TasksList\";\r\nimport { NewTask } from \"./components/NewTask\";\r\nimport \"./App.scss\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"appContent\">\r\n      <h1 className=\"mainTitle\">Todo List</h1>\r\n      <NewTask />\r\n      <TasksList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const initialState = {\r\n  tasks: [\r\n    { title: \"New project\", description: \"Create new project\", status: false },\r\n    { title: \"Styling\", description: \"Style this app\", status: false },\r\n  ],\r\n};\r\n\r\nexport const tasksReducer = (\r\n  state: TasksState = initialState,\r\n  action: Actions\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_TASK\":\r\n      console.log(\"ADD_TASK\", action.payload);\r\n      return { ...state, tasks: [...state.tasks, action.payload] };\r\n\r\n    case \"TOGGLE_TASK\":\r\n      let newState = { ...state };\r\n      console.log(\"TOGGLE_TASK\", action.payload);\r\n      newState.tasks.map((el, id) => {\r\n        if (action.payload === el) {\r\n          newState.tasks[id].status = !el.status;\r\n        }\r\n        return newState;\r\n      });\r\n      return { ...state, tasks: [...newState.tasks] };\r\n    case \"DELETE_TASK\":\r\n      console.log(\"DELETE_TASK\", action.payload);\r\n\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((el) => el !== action.payload),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { tasksReducer } from \"./reducers/tasksReducer\";\r\nexport const store = createStore(tasksReducer);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}